# vim:set filetype=zsh fdm=marker:

# alias settings{{{

alias ...='cd ../..'
alias ....='cd ../../..'

# sudo時もエイリアスが展開されるりょうに
alias sudo='sudo '

# common {{{
# オプションの設定はGNUコマンドが前提となっている
# なのでMac ユーザはhomebrewかportsからcoreutilsを導入すること

# エスケープシーケンスがうまいこと処理されなかったりするので無効る
#alias grep='grep --color=auto'

alias diff='colordiff'

#alias ssh='TERM=xterm-265color ssh'
# use vim --nopluginmode as pager
alias vless='/usr/share/vim/vim73/macros/less.sh'
alias ved='vim ~/.vimrc'
# vim with no settings
alias pvim='vim -u NONE -N'
#alias rm='rm --verbose'
alias mkdir='mkdir -p'
alias ls='ls --color=auto -AF'
alias l='ls'
alias ll='ls -AFltrh'
alias rm='rm --interactive=once'
alias cp='cp --interactive'
alias mv='mv --interactive'

alias uninstall_gems='gem uninstall -axI `gem list --no-versions |grep -v test-unit |grep -v psych |grep -v rdoc | grep -v minitest |grep -v io-console | grep -v json |grep -v rake |grep -v bigdecimal`'

alias start_server='python -m SimpleHTTPServer 8080'

# ====================== OS specific ===========================
case "${OSTYPE}" in
freebsd*|darwin*)
# =================== Mac OS X =======================
  alias -g ios_simu='/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app/'
  ;;

linux*)
# ==================== Linux =========================
    alias gvim='gvim --remote-tab-silent'
    alias ap='aptitude'
    alias ack='ack-grep'
    alias pbpaste='xsel -b'
    alias -g pbcopy='xsel -bi'
    ;;

cygwin*)
    alias ap='apt-cyg -u'
    alias open='explorer.exe "$(cygpath -wa `pwd`)"'
    alias gvim='cyg-wrapper.sh "/cygdrive/c/vim/gvim.exe" --binary-opt=-c,--cmd,-T,--servername,--remote-send,--remote-expr --fork=1'
   ;;

esac

#}}}

# --- global alias ---{{{
alias -g @g='| grep'
alias -g @x='| xargs'
alias -g @a='| awk'
alias -g @s='| sed'
alias -g @l='| less'
alias -g @h='| head'
alias -g @t='| tail'
#}}}

# -------- git alias -------{{{
alias g='git'
alias ga='git add'
alias gap='git add -p'
alias gcm='git commit'
alias gcmm='git commit -m'
alias gbr='git branch -a'
alias gdif='git diff'
# alias gst='git status -sb'
alias gamend='git commit --amend --no-edit'
alias ggrep='git grep -Hi --heading --break'

alias gmerged-branch='git branch --merged |grep -v "*" | grep -v "develop" | grep -v "master"'
alias -g @rmbr='| xargs -I % git branch -d %'

alias hout='hub checkout'

compdef g='git'

#}}}
#}}}

# --------- functions --------- {{{
# arrange a littele: http://qiita.com/items/1f01aa09ccf148542f21
gs() {
    git status -sb && git stash list
}

# show git status with line numbers
gst() {
    git status -sb | head -n 1 && git stash list
    git status -sb | sed '1d' | grep --line-number '^'
}

git_get_target() {
    if [ $# -eq 0 ]; then
        return 0
    fi
    echo `git status -sb |grep -v "^#" | awk '{print$1="";print}' |grep -v "^$" | awk "NR==$1" | sed "s/\s//g"`
}

gsa() {
    if [ $# -eq 0 ]; then
        echo "you should appoint number of lines"
        return 0
    fi
    local targfile=$(git_get_target $1)
    echo "add $targfile"

    # -pとかをねじ込むため
    if [ $# -ge 2 ]; then
        git add $2 $targfile
    else
        git add $targfile
    fi
}
gsd() {
    if [ $# -eq 0 ]; then
        git diff --color
        return 1
    fi
    local targfile=$(git_get_target $1)

    # --cachedとかをねじ込むため
    if [ $# -ge 2 ]; then
        git diff --color $2 $targfile
        echo "show diff cache $targfile"
    else
        git diff --color -- $targfile
        echo "show diff $targfile"
    fi
}
gsv() {
    if [ $# -eq 0 ]; then
        echo "you should appoint number of lines"
        return 0
    fi
    local targfile=$(git_get_target $1)
    echo "edit $targfile"
    vim $targfile
}
gsrm() {
    if [ $# -eq 0 ]; then
        echo "you should appoint number of lines"
        return 0
    fi
    local targfile=$(git_get_target $1)
    git rm $targfile
}
stashow() {
    if [ $# -eq 1 ]; then
        git stash show stash@\{$1\} -p --color
        return 1
    else
        echo 'you should appoint number of stash'
    fi
}
ged() {
    if [ $# -le 1 ]; then
        echo "you should appoint the words to flip"
        return 0
    fi
    git grep --name-only $1 | xargs -0 sed -i -e "s/$1/$2/g"
}

# --- }}}
